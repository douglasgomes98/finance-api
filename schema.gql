# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Bank {
  color: String!
  id: ID!
  image: String!
  name: String!
}

type Category {
  color: String!
  id: ID!
  name: String!
  userId: String!
}

input CreateCategoryInput {
  color: String!
  name: String!
}

input CreateCreditCardInput {
  bankId: String!
  closingDay: Float!
  dueDay: Float!
  limit: Float!
  name: String!
}

input CreateExpenseInput {
  categoryId: String!
  creditCardId: String!
  date: DateTime!
  installments: Float
  isFixed: Boolean!
  name: String!
  value: Float!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

type CreditCard {
  bank: Bank!
  bankId: String!
  closingDay: Float!
  dueDay: Float!
  id: ID!
  limit: Float!
  limitAvailable: Float!
  limitUsed: Float!
  name: String!
  percentLimitUsed: Float!
  userId: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Expense {
  categoryId: String!
  creditCardId: String!
  date: DateTime!
  id: ID!
  installmentsIdentifier: String!
  isFixed: Boolean!
  isIgnored: Boolean!
  isPaid: Boolean!
  name: String!
  userId: String!
  value: Float!
}

type Mutation {
  createCategory(data: CreateCategoryInput!): Category!
  createCreditCard(data: CreateCreditCardInput!): CreditCard!
  createExpense(data: CreateExpenseInput!): Expense!
  createUser(data: CreateUserInput!): User!
  deleteCategory(id: String!): Boolean!
  deleteCreditCard(id: String!): Boolean!
  updateCategory(data: UpdateCategoryInput!, id: String!): Category!
}

type Query {
  listBanks: [Bank!]!
  listCategories: [Category!]!
  listCreditCards: [CreditCard!]!
}

input UpdateCategoryInput {
  color: String!
  name: String!
}

type User {
  email: String!
  id: ID!
  name: String!
}